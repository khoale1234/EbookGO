{{define "base"}}
    <!doctype html>
    <html lang="en">

    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <title>My Nice Page</title>
        <link
	href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
	rel="stylesheet"
	integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"
	crossorigin="anonymous">
    <script
        src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"
        integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p"
        crossorigin="anonymous"></script>
    <script
        src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js"
        integrity="sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF"
        crossorigin="anonymous"></script>
    <link rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
        integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="all_components/style.css">
        <style type="text/css">
        .crd-ho:hover {
            background-color: #C6BEBE;
        }
			
		.bg-custom{
			background-color: #5c6bc0;
		}
		.navbar .nav-item .nav-link:hover{
			background-color: white; 
			color:#303f9f;
			border-radius: 15px;
		}
		.back-img{
			background: url("static/images/bookimg.jpg");
			height:50vh;
			width:100%;
			background-repeat: no-repeat;
			background-size: cover;
		}
		.custom-color{
			color:silver;
		}
		.crd-ho:hover{
			background-color: red;
		}
    </style>
    </head> 
<body style="background-color: #f0f1f2;">
        <div class="row">
		<div class="col-md-3">
			<h3><i class="fa-solid fa-book"></i> Ebook</h3>
		</div>
		<div class="col-md-6">
			<div class=col-md-6>
				<form action="search.jsp" class="d-flex">
					<input class="form-control me-2" type="search" placeholder="Type book'name or author to search"
						aria-label="Search" name="search">
					<button class="btn btn-primary" type="submit" >Search</button>
				</form>
			</div>
		</div>
		<!-- <c:if test="${not empty userobj }"> -->
			<div class="col-md-3">
			<div class=mr-auto>
				<a href="checkout.jsp"><i class="fas fa-cart-plus fa-2x text-primary"></i></a>
				 <a href="login.jsp" class="btn btn-success mb-3"><i class="fas fa-user"></i> ${userobj.name }</a> 
				 <a href="logout" class="btn btn-primary mb-3"><i class="fa-solid fa-plus"></i> Log out</a>
				 
			</div>
		</div>
		
		<!-- </c:if> -->
		<!-- <c:if test="${ empty userobj }">
			<div class="col-md-3">
			<div class=mr-auto>
				 <a href="login.jsp" class="btn btn-success"><i class="fa-solid fa-right-to-bracket"></i> Login</a> 
				 <a href="register.jsp" class="btn btn-primary"><i class="fa-solid fa-plus"></i> Sign in</a>
			</div>
		</div>
		
		</c:if> -->
		
	</div>
	<nav class="navbar navbar-expand-lg navbar-dark bg-custom">
		<div class="container-fluid">
			<a class="navbar-brand" href="#"><i class="fa-solid fa-house"></i></a>
			<button class="navbar-toggler" type="button"
				data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent"
				aria-controls="navbarSupportedContent" aria-expanded="false"
				aria-label="Toggle navigation">
				<span class="navbar-toggler-icon"></span>
			</button>
			<div class="collapse navbar-collapse" id="navbarSupportedContent">
				<ul class="navbar-nav me-auto mb-2 mb-lg-0">
					<li class="nav-item"><a class="nav-link active"
						aria-current="page" href="index.jsp">Home</a></li>
					<li class="nav-item active"><a class="nav-link active" href="/all_recent_books"><i class="fa-solid fa-book-open-reader"></i> Recent Book</a></li>
					<li class="nav-item active"><a class="nav-link active" href="/all_new_books"><i class="fa-solid fa-book-open"></i></i> New Book</a></li>
					<li class="nav-item active"><a class="nav-link active" href="/all_old_books"><i class="fa-solid fa-bookmark"></i> Old Book</a></li>
				</ul>
				<form class="d-flex">
					<a href="setting.jsp" class="btn btn-light my-2 my-sm-0 p-2" type="submit" style="border-radius:15px "><i class="fa-solid fa-gear"></i> Setting</a> 
					<a href="helpline.jsp" class="btn btn-light my-2 my-sm-0 p-2" type="submit" style="border-radius:15px "><i class="fa-brands fa-rocketchat"></i> Contact us</a> 
				</form>
			</div>
		</div>
	</nav>
    </body> 
	{{block "content" .}}

    {{end}}   
	 <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
            integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
            crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-Piv4xVNRyMGpqkS2by6br4gNJ7DXjqk09RmUpJ8jgGtD7zP9yug3goQfGII0yAns"
            crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.1.2/dist/js/datepicker-full.min.js"></script>
    <script src="https://unpkg.com/notie"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10.15.5/dist/sweetalert2.min.js"></script>


    {{block "js" .}}

    {{end}}

    <script>
        let attention = Prompt();

        (function () {
            'use strict';
            window.addEventListener('load', function () {
                // Fetch all the forms we want to apply custom Bootstrap validation styles to
                let forms = document.getElementsByClassName('needs-validation');
                // Loop over them and prevent submission
                Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();


        function notify(msg, msgType) {
            notie.alert({
                type: msgType,
                text: msg,
            })
        }

        function notifyModal(title, text, icon, confirmationButtonText) {
            Swal.fire({
                title: title,
                html: text,
                icon: icon,
                confirmButtonText: confirmationButtonText
            })
        }
        {{with .Error}}
                notify("{{.}}","error")
        {{end}}
          {{with .Flash}}
                notify("{{.}}","success")
        {{end}}
        {{with .Warning}}
                notify("{{.}}","warning")
        {{end}}

        function Prompt() {
            let toast = function (c) {
                const{
                    msg = '',
                    icon = 'success',
                    position = 'top-end',

                } = c;

                const Toast = Swal.mixin({
                    toast: true,
                    title: msg,
                    position: position,
                    icon: icon,
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

                Toast.fire({})
            }

            let success = function (c) {
                const {
                    msg = "",
                    title = "",
                    footer = "",
                } = c

                Swal.fire({
                    icon: 'success',
                    title: title,
                    text: msg,
                    footer: footer,
                })

            }

            let error = function (c) {
                const {
                    msg = "",
                    title = "",
                    footer = "",
                } = c

                Swal.fire({
                    icon: 'error',
                    title: title,
                    text: msg,
                    footer: footer,
                })

            }

            async function custom(c) {
                const {
                    msg = "",
                    title = "",
                } = c;

                const { value: result } = await Swal.fire({
                    title: title,
                    html: msg,
                    backdrop: false,
                    focusConfirm: false,
                    showCancelButton: true,
                    willOpen: () => {
                        if (c.willOpen !== undefined) {
                            c.willOpen();
                        }
                    },
                    didOpen: () => {
                        if (c.didOpen !== undefined){
                            c.didOpen();
                        }
                    },
                    preConfirm: () => {
                        return [
                            document.getElementById('start').value,
                            document.getElementById('end').value
                        ]
                    }
                })

                if (result) {
                    if (result.dismiss !== Swal.DismissReason.cancel) {
                        if (result.value !== "") {
                            if (c.callback !== undefined) {
                                c.callback(result);
                            }
                        } else {
                            c.callback(false);
                        }
                    } else {
                        c.callback(false);
                    }
                }
            }

            return {
                toast: toast,
                success: success,
                error: error,
                custom: custom,
            }
        }

    </script>

    </body>

    </html>
{{end}}
